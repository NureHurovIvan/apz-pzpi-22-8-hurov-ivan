Міністерство освіти і науки України
Харківський національний університет радіоелектроніки

Кафедра програмної інженерії

Звіт
З дисципліни «Архітектура програмного забезпечення»
З лабораторної роботи №1

Виконавець:		
ст. гр. ПЗПІ-22-8						                         Гуров І.Г. 

Перевірив:		
доц. каф. ПІ						                         Сокорчук І. П. 
	


                                                                                                       









Харків 2025
 
1	МЕТА РОБОТИ

Підготувати робочий документ та детальний опис проєкту у форматі Vision & Scope для програмної системи інтелектуального моніторингу стану зносу частин автотранспорту та сповіщення про заміну деталей «AutoCare».

2	ХІД РОБОТИ

Для створення документа з вимогами до проєкту було визначено ключові аспекти, що відображають основні цілі, функціональні можливості та обмеження проєкту, а також етапи його реалізації.
Перш за все, було чітко окреслено тему проєкту, що включає розробку системи моніторингу стану автомобіля за допомогою IoT сенсорів. Метою є створення платформи, яка дозволить власникам автомобілів відстежувати основні параметри, такі як тиск у шинах, стан акумулятора та знос гальмівних колодок. Для цього використовуватимуться сучасні технології IoT для взаємодії з сенсорами, а також розроблятиметься API для збирання та обробки даних..

3	ВИСНОВКИ

У результаті виконання лабораторної роботи було розроблено детальний документ у форматі Vision & Scope для програмної системи інтелектуального моніторингу стану зносу частин автотранспорту та сповіщення про заміну деталей «AutoCare». Метою цієї роботи було створити чітке розуміння проекту, зокрема його цілей, функціональних можливостей, обмежень, а також етапів реалізації. Документ Vision & Scope охоплює бізнес-вимоги, концепцію рішення, рамки та обмеження проєкту.
Система AutoCare дозволяє здійснювати моніторинг ключових технічних параметрів автомобіля в реальному часі за допомогою IoT-сенсорів, а також сповіщає користувачів про необхідність чи проведення технічного обслуговування. Для досягнення високої ефективності проекту було визначено основні бізнес-цілі та критерії успіху, які допоможуть визначити ефективність реалізації системи.
 
ДОДАТОК А
Посилання на відеозапис доповіді

Відеозапис доповіді на YouTube: https://youtu.be/WSa7pPOloa4
Нижче наведено хронологічний опис доповіді.
00:00 – Вітання. Оголошення імені доповідача, академічної групи та теми звіту.
00:25 – Зміст. Короткий перелік підтем, які будуть розглянуті.
00:55 – Мета роботи. Опис мети підготовки документа Vision & Scope для системи «AutoCare».
01:29 – Хід роботи. Опис процесу створення документа.
02:30 – Документ Vision & Scope – Розділ 1 (Бізнес-вимоги).
04:13 – Документ Vision & Scope – Розділ 2 (Концепція рішення).
05:08 – Документ Vision & Scope – Розділ 3.1 (Рамки первинного випуску). 
08:18 – Документ Vision & Scope – Розділ 4 (Бізнес-контекст). 
09:12 – Висновки. Підсумок виконаної роботи
10:00 – Додатки. Інформація про додаток А та додаток Б.
10:17 – Завершення. 
Додаток Б
VISION & SCOPE DOCUMENT


Vision and Scope Document

for

Програмна система моніторингу стану зносу частин автотранспорту та сповіщення про заміну деталей «AutoCare»
Version 1.0 approved


Prepared by Гуров Іван Геннадійович


PZPI-22-8


20.05.2025
 
Table of contents

Зміст
Зміст	6
Історія ревізій	6
1	Business Requirements (Бізнес-вимоги)	7
1.1	Background (Передумови)	7
1.2	Business Opportunity (Бізнес-можливості)	7
1.3	Business Objectives and Success Criteria (Бізнес-цілі та критерії успіху). 8
1.4	Customer or Market Needs (Потреби клієнтів або ринку)	9
1.5	Business Risks (Бізнес-ризики)	10
2	Vision of the Solution (Концепція рішення)	11
2.1	Vision Statement (Окреслення концепції)	11
2.2	Major Features (Головна функціональність)	11
2.3	Assumptions and Dependencies (Припущення та залежності).	12
3	Scope and Limitations (Рамки та обмеження проєкту)	13
3.1	Scope of Initial Release (Рамки первинного випуску)	13
3.2	Scope of Subsequent Releases (Рамки наступних випусків)	14
3.3	Limitations and Exclusions (Обмеження та винятки)	14
4	Business Context (Бізнес-контекст)	16
4.1	Stakeholder Profiles (Профілі зацікавлених сторін)	16
4.2	Project priorities (Пріоритети проєкту)	16
4.3	Operating Enviroment (Робоче середовище)	17
 
1.	Business Requirements

1.1 Background

Система AutoCare призначена для автоматизованого моніторингу технічного стану автомобілів за допомогою IoT-сенсорів. Вона дозволяє відстежувати ключові параметри, такі як тиск у шинах, стан акумулятора, знос гальмівних колодок, температура двигуна та рівень палива, а також надсилати користувачам сповіщення про необхідність технічного обслуговування чи заміни деталей. Система включає серверну частину, веб- та мобільний клієнтські інтерфейси, а також інтеграцію з IoT-пристроями. AutoCare спрямована на підвищення безпеки транспортних засобів, зниження витрат на ремонт та оптимізацію обслуговування для індивідуальних автовласників і автопарків.

1.2 Business Opportunities 

Існують окремі рішення для моніторингу певних параметрів, наприклад, гальмівної системи або двигуна, проте на ринку немає комплексного рішення, що дозволяло б моніторити загальний стан автотранспорту. Проект буде вигідний завдяки:
•	Платним підпискам для автопарків.
•	Співпраці з сервісними центрами для технічного обслуговування.
•	Монетизації через надання платних функцій для приватних користувачів.

1.3. Business Objectives and Success Criteria 

Основною метою є реалізація продукту до середини 2025 року. Успіх оцінюватиметься за такими критеріями:
•	Завершення MVP до червня 2025.
•	Досягнення мінімум 100 користувачів протягом перших трьох місяців.
•	Проведення масштабного тестування із залученням автопарків протягом року.

1.4. Customer and Market Needs 

Споживачі, як автопарки, так і індивідуальні власники автомобілів, потребують автоматизованих рішень для своєчасного обслуговування автомобілів з метою зменшення витрат на ремонт і підвищення безпеки. Вони прагнуть отримувати своєчасні сповіщення, що допоможе запобігти несправностям.

1.5. Business Risks 

Основні ризики включають складність інтеграції з різними моделями автомобілів, високий рівень конкуренції, та потребу в гарантії безпеки даних користувачів.
 
2.	Vision of the Solution

2.1. Vision Statement 

Система забезпечує безперервний моніторинг технічного стану частин автомобіля в реальному часі та надсилає користувачам сповіщення про необхідність заміни деталей або техогляду. Використовуючи IoT-сенсори, система фіксує дані про основні параметри, такі як температура двигуна, рівень палива, знос гальмівних колодок тощо.

2.2. Major Features 

•	Моніторинг технічних параметрів: Збір даних з сенсорів для аналізу.
•	Сповіщення: Нагадування про потребу заміни або обслуговування.
•	Мобільний додаток: Доступ до інформації в реальному часі.
•	Веб-інтерфейс для адміністратора: Інструменти для керування обліковими записами та звітності.

2.3. Assumptions and Dependencies 

•	AD-1: Користувачі мають доступ до автомобілів, оснащених необхідними IoT-сенсорами.
•	AD-2: Доступ до стабільного інтернет-з'єднання для передачі даних.
 
3.	Scope and Limitations

3.1. Scope of Initial Release 

Система AutoCare у початковому релізі забезпечує базовий функціонал для моніторингу стану автомобілів, обробки даних та інформування користувачів. Система складається з чотирьох основних компонентів: серверної частини, IoT-пристроїв, веб-клієнта та мобільного клієнта. Нижче наведено детальний опис роботи всієї системи:
•	Серверна частина: 
o	Використовує Node.js з фреймворком Express.js для створення RESTful API, що обробляє запити від клієнтів і IoT-пристроїв.
o	Зберігає дані в MongoDB з використанням бібліотеки Mongoose для структуризації та управління даними.
o	Реалізує CRUD-операції для сутностей: користувачі (Users), автомобілі (Vehicles), сенсори (Sensors), технічне обслуговування (Maintenance) та сповіщення (Notifications).
o	Забезпечує автентифікацію та авторизацію користувачів за допомогою JWT-токенів.
o	Використовує протокол MQTT для обміну даними з IoT-пристроями в реальному часі.
•	IoT-пристрої: 
o	Збирають дані про стан автомобіля, зокрема тиск у шинах, температуру двигуна, рівень палива, знос гальмівних колодок та стан акумулятора.
o	Передають дані на сервер через MQTT-протокол для подальшої обробки.
o	Підтримують інтеграцію з основними типами сенсорів, сумісних із популярними моделями автомобілів.
•	Веб-клієнт: 
o	Розроблений на основі React та Tailwind CSS для створення адаптивного та інтуїтивно зрозумілого інтерфейсу.
o	Дозволяє користувачам переглядати актуальні дані про стан автомобіля у вигляді графіків і таблиць.
o	Надає адміністративний інтерфейс для керування обліковими записами користувачів (блокування, зміна ролей) та перегляду звітів про технічне обслуговування.
o	Використовує Axios для HTTP-запитів до серверної частини.
•	Мобільний клієнт: 
o	Розроблений на Kotlin для платформи Android із використанням XML для створення інтерфейсу.
o	Забезпечує доступ до даних про стан автомобіля в реальному часі, включаючи сповіщення про необхідність технічного обслуговування.
o	Надає користувачам зручний інтерфейс для перегляду історії обслуговування та отримання push-сповіщень.
Функціональність початкового релізу:
1.	Збір даних із IoT-сенсорів (тиск у шинах, температура двигуна, рівень палива, знос гальмівних колодок).
2.	Відображення даних у реальному часі через веб- та мобільний клієнти.
3.	Автоматизовані сповіщення про необхідність технічного обслуговування (через email та push-повідомлення).
4.	Аналітика стану автомобіля з відображенням у вигляді графіків і таблиць.
5.	Адміністративний інтерфейс для керування користувачами та їхніми автомобілями.
6.	Резервне копіювання бази даних для забезпечення надійності.

3.2 Scope of Subsequent Releases 

o	Наступні релізи системи AutoCare будуть спрямовані на інтеграцію штучного інтелекту (ШІ) для підвищення ефективності моніторингу, прогнозування та персоналізації. Нижче описано три ключові аспекти роботи з ШІ:
Застосування ШІ: 
•	Прогнозування зносу деталей: ШІ-алгоритми аналізуватимуть історичні дані з IoT-сенсорів (наприклад, частоту гальмування, температуру двигуна, стиль водіння) для прогнозування ймовірного зносу деталей, таких як гальмівні колодки чи акумулятор. Це дозволить користувачам отримувати попередження про необхідність заміни деталей до виникнення критичних несправностей.
•	Оптимізація технічного обслуговування: ШІ надаватиме персоналізовані рекомендації щодо графіку техобслуговування на основі даних про експлуатацію автомобіля (наприклад, інтенсивність використання, кліматичні умови).
•	Виявлення аномалій: ШІ-система ідентифікуватиме відхилення в показниках (наприклад, різке підвищення температури двигуна) і надсилатиме миттєві сповіщення для запобігання аварій.
Збирання даних: 
•	Джерела даних: Дані збиратимуться з IoT-сенсорів, установлених на автомобілях (тиск у шинах, температура двигуна, рівень палива, знос гальмівних колодок, стиль водіння). Додатково враховуватимуться зовнішні дані, такі як погодні умови (через API метеосервісів) та інформація про маршрути (через GPS-даних).
•	Методи збору: Дані передаються в реальному часі через MQTT-протокол до серверної частини, де зберігаються в MongoDB. Для забезпечення якості даних використовуватимуться фільтри для видалення шумів і аномалій. Користувачі можуть надавати зворотний зв’язок про точність рекомендацій, який також зберігатиметься для донавчання моделей.
•	Анонімізація даних: Для дотримання вимог GDPR дані користувачів анонімізуватимуться перед використанням у навчанні моделей.
Навчання/використання ШІ: 
•	Використання готових API: На початкових етапах планується використовувати готові API сервісів ШІ, такі як Google Cloud AI або AWS SageMaker, для прогнозування зносу деталей і виявлення аномалій. Це дозволить швидко інтегрувати ШІ без необхідності створення моделей із нуля.
•	Донавчання моделей: У подальшому буде створена власна модель машинного навчання на основі зібраних даних. Наприклад, модель регресії для прогнозування зносу деталей або класифікаційна модель для виявлення аномалій. Донавчання виконуватиметься на основі даних, зібраних від користувачів AutoCare, для підвищення точності прогнозів.
•	Інтеграція з даними користувачів: Зібрані дані (історія експлуатації, зворотний зв’язок) використовуватимуться для періодичного донавчання моделей, щоб адаптувати їх до специфічних умов використання (наприклад, регіональні особливості чи типи автомобілів).

3.3 Limitations and Exclusions 

Система AutoCare має низку обмежень, які впливають на її функціональність у початковому релізі та наступних етапах розробки:
Обмеження початкового релізу: 
•	Обмежена сумісність із IoT-пристроями: Система підтримує лише базові сенсори, сумісні з популярними моделями автомобілів. Інтеграція з менш поширеними моделями або спеціалізованими сенсорами (наприклад, для електромобілів) не реалізована через складність адаптації та обмежений бюджет.
•	Залежність від інтернет-з’єднання: Для передачі даних із IoT-пристроїв і відображення інформації в реальному часі потрібне стабільне інтернет-з’єднання. У разі його відсутності функціональність системи обмежується.
•	Відсутність розширеного аналізу: На початковому етапі система не підтримує складний аналіз даних, наприклад, прогнозування зносу деталей на основі історичних даних чи стилю водіння.
Обмеження, пов’язані з ШІ: 
•	Обмежена точність прогнозів: ШІ-моделі, що використовують готові API, можуть мати нижчу точність через узагальнений характер даних, на яких вони навчені. Донавчання власних моделей потребуватиме значного обсягу даних і часу.
•	Обмеження збору даних: Система не може збирати дані з автомобілів, які не оснащені сумісними IoT-сенсорами, що обмежує її застосовність для старих моделей автомобілів.
•	Обмеження локалізації: У початкових релізах ШІ-функціонал підтримуватиме лише українську та англійську мови для рекомендацій і сповіщень, що може обмежити доступність для користувачів з інших регіонів.
Навмисно виключений функціонал: 
•	Інтеграція з діагностичними системами автовиробників: Наприклад, підключення до бортових комп’ютерів через OBD-II не реалізовано через складність стандартизації та високі витрати на інтеграцію з різними автовиробниками.
•	Підтримка сервісів технічної допомоги: Функціонал чат-бота чи служби підтримки 24/7 виключено з початкових релізів через потребу в додаткових ресурсах і фокусі на базовому моніторингу.
•	Розширена аналітика для автопарків: Аналітичні звіти для компаній з автопарками (наприклад, порівняння ефективності транспортних засобів) не включено, оскільки це потребує складних алгоритмів і додаткових даних, які планується реалізувати в майбутніх релізах.

 
4. Business Context
4.1 Stakeholder Profiles

Таблиця 1 – Профілі зацікавлених сторін проєкту
Stakeholder	Major Value	Attitudes	Major Interests	Constraints
Автовласники (індивідуальні користувачі)	Доступ до інструментів для моніторингу стану автомобіля та безпеки	Позитивне ставлення до технологій, які спрощують обслуговування та покращують безпеку авто	Простота користування, своєчасні сповіщення, забезпечення безпеки на дорозі	Витрати на впровадження IoT-сенсорів, зручність доступу та налаштувань додатку
Компанії, що володіють автопарками	Оптимізація витрат на ремонт та підвищення ефективності автопарку	Прагнуть мінімізувати витрати на обслуговування та уникати затримок, пов’язаних з техобслуговування	Деталізований моніторинг стану авто, зниження витрат на обслуговування, прозорість у даних	Вартість інтеграції системи з наявними транспортними засобами, масштабованість
Сервісні центри	Співпраця з платформою для збільшення обсягу обслуговування	Зацікавлені у використанні інноваційних рішень для залучення нових клієнтів	Доступ до клієнтів, які потребують обслуговування, інформування про необхідність техобслуговування	Обмежена інтеграція з іншими інструментами, вимоги до безперебійного доступу та актуальних даних від платформи
Розробники (внутрішня команда)	Успішне розгортання та підтримка платформи	Відповідальність за забезпечення стабільної роботи продукту, підтримку безпеки та зручності	Стабільна робота додатка, своєчасне оновлення, захист даних	Ресурси на тестування і підтримку, терміни виконання проекту, обмежений бюджет на розробку









4.2 Project Priorities 

4.1	Таблиця 2 – Пріоритети проєкту
Dimension	Driver (state objective)	Constraint (state limits)	Degree of Freedom (state allowable range)
Schedule	Запуск версії 1.0 до кінця червня 2025 року	Дата випуску версії 1.0 є фіксованою	Можливі переноси через брак часу
Features	Інтеграція основних функцій моніторингу та аналізу		70-80% функцій високого пріоритету має бути
реалізовано у версії 1.0
Quality	Мінімальний рівень помилок у критичних процесах		90-95% тестів прийнятності мають бути успішними для релізу 1.0

Кінець табл. 2
Staff	Максимальна
ефективність за умовами наявних ресурсів	Команда обмежена 1 розробником і
тестувальником за сумісництвом	
Cost	Оптимізація бюджету без зниження функціональності	Максимальний бюджет перевищуватися не повинен	

4.3 Operating Environment 

Для розробки системи AutoCare буде застосовано ряд сучасних технологій, що забезпечують швидкий, надійний і зручний доступ до платформи як для кінцевих користувачів, так і для адміністраторів. 
Фронтенд (Frontend)
Для реалізації веб-інтерфейсу системи AutoCare використовуються такі технології:
‒	HTML – для структурування веб-сторінок та забезпечення основи їхньої побудови.
‒	Tailwind CSS – сучасна CSS-бібліотека для швидкого стилізування елементів інтерфейсу, що дозволяє створювати адаптивний та сучасний дизайн з високою продуктивністю.
‒	JavaScript з бібліотекою – для реалізації інтерактивних елементів інтерфейсу. 
Бекенд (Backend)
Бекенд частина платформи AutoCare буде побудована на:
‒	Node.js – середовищі виконання JavaScript на сервері, яке забезпечує високу продуктивність і масштабованість.
‒	Express.js – фреймворку для Node.js, який полегшує побудову RESTful API для обміну даними між фронтендом і бекендом, а також для забезпечення аутентифікації користувачів і обробки запитів до бази даних.
Мобільний додаток (Mobile Application)
Розробка мобільного застосунку для Android платформи виконується на:
Kotlin та XML – мова програмування Kotlin, що є сучасною альтернативою Java, забезпечує більш зручну розробку додатків для Android, а XML використовується для опису інтерфейсу користувача. Це поєднання дає змогу створювати нативні Android-додатки з інтуїтивним і приємним дизайном, який відповідає вимогам користувачів.
База даних (Database)
MongoDB — документо-орієнтована система керування базами даних (СКБД) з відкритим вихідним кодом, яка не потребує опису схеми таблиць.
