Міністерство освіти і науки України 
Харківський національний університет радіоелектроніки 
Звіт  
до практичного заняття №1 з дисципліни  
«Архітектура програмного забезпечення»  
На тему: «Патерни проєктування» 
Виконав: 
Ст. гр. ПЗПІ-22-8  
Перевірив: 
ст. викладач кафедри ПІ 
Гуров І. Г. 
Сокорчук Ігор Петрович 
Харків 2024 
1. ПАТЕРНИ ПРОЄКТУВАННЯ 
1.1 Історія змін 
Зміни в документі нотуються до таблиці 1.1. 
Дата 
Таблиця 1.1 – Історія змін 
№
 1 
Версія звіту 
09.04.25 
0.1 
Опис змін та виправлень 
Створено розділ «Історія змін» 
2 
09.04.25 
0.1 
Створено розділ «Завдання до 
практичної роботи» 
3 
09.04.25 
0.1 
Створено розділ «Хід роботи» 
4 
09.04.25 
0.1 
Створено розділ «Висновки» 
5 
09.04.25 
0.1 
Додано додаток А з посиланням на 
відеоролик 
6 
09.04.25 
0.1 
Додано додаток Б зі слайдами 
презентації 
7 
09.04.25 
0.1 
Додано додаток В з програмним 
кодом 
2. 
Завдання 
• Вивчити патерн проєктування Bridge. 
• Створити презентацію зі структурою патерна, прикладом з UML та 
реального світу. 
• Реалізувати приклад патерна на Python. 
• Записати відео з поясненням презентації. 
• Підготувати звіт і додати матеріали на GitHub. 
3. 
Хід роботи  
Для виконання практичної роботи мною було обрано патерн Bridge 
(Міст), який належить до структурних патернів проєктування. Його головна 
мета — розділення абстракції та реалізації, що дозволяє розвивати ці частини 
системи незалежно одна від одної. 
У процесі роботи було виконано такі етапи: 
• Ознайомився з теоретичними основами патерна: принципи його 
функціонування, сфери застосування, переваги та обмеження. 
• Розглянув приклади з практики та реального життя для кращого 
розуміння: зокрема, аналогію з телевізором та пультом дистанційного 
керування. 
2 
o 
• Створив презентацію, до складу якої увійшли: 
Вступ до теми патернів проєктування 
o 
Загальна ідея та структура патерна Bridge 
o 
та реалізацією 
o 
o 
UML-діаграма, що ілюструє логіку взаємодії між абстракцією 
Приклад з життя для наочного пояснення принципу 
Фрагмент коду на мові Python, що демонструє практичну 
реалізацію патерна 
o 
Слайди з перевагами і недоліками патерна 
• Озвучив презентацію та записав відео, у якому детально пояснюю 
кожен слайд українською мовою. 
o 
• Всі матеріали було належним чином оформлено згідно з вимогами: 
Презентацію збережено у форматі PDF 
o 
o 
o 
Код додано у вигляді окремого файлу 
Відео завантажено для перегляду 
Усі ресурси зібрано в репозиторії на GitHub для зручного 
доступу перевіряючого. 
4. 
Висновки 
У результаті виконання роботи я краще зрозумів, як структурні патерни 
проєктування, зокрема Bridge, сприяють створенню гнучкої та масштабованої 
архітектури програмного забезпечення. 
Основні висновки: 
• Bridge-патерн дозволяє уникати надмірного розростання ієрархії 
класів і спрощує підтримку коду. 
• Завдяки розділенню абстракції від реалізації, можна змінювати або 
доповнювати одну з частин системи без втручання в іншу, що є критично 
важливим для підтримки великих проєктів. 
• Під час виконання цієї роботи я не лише поглибив свої знання з 
програмної інженерії, а й оцінив можливості сучасних інструментів, зокрема 
3 
використання штучного інтелекту для створення пояснень, генерації прикладів 
коду та оптимізації підготовки презентацій. 
Отримані знання можуть бути використані у подальших практичних і 
курсових проєктах, де важлива чітка архітектура та гнучкість реалізації. 
4 
ДОДАТОК А 
Хронологічний опис та посилання 
Відеозапис доповіді на YouTube: https://youtu.be/PB7lnWZWbJo 
Хронологічний опис доповіді: 
00:00 Вступна частина 
Представлення себе, теми презентації та короткий вступ. Розповідається про 
актуальність патернів проєктування та чому обрано саме патерн «Міст». 
00:30 Що таке патерни проєктування 
Опис сутності патернів проєктування як перевірених рішень для типових 
проблем у розробці ПЗ. Акцент на структуризації коду, полегшенні його 
підтримки та розширення. 
00:55 Загальна ідея патерна Bridge 
Пояснення основної концепції: розділення абстракції від реалізації та 
можливість їх незалежного розвитку. Вказується, як це дозволяє гнучко 
комбінувати різні варіанти функціональності. 
01:20 Проблема, яку вирішує патерн 
Опис проблеми надмірної складності ієрархій класів (випадок множинного 
успадкування). Пояснення, як Bridge зменшує зв’язність між компонентами 
системи та забезпечує зміну реалізації без впливу на абстракцію. 
01:45 Структура патерна Bridge 
Детальний розбір структури: визначення абстракції (інтерфейсу) та реалізації 
(конкретних класів, що виконують функціональність). Опис ролі механізму 
делегування для зв’язку між рівнями. 
02:10 Приклад використання патерна 
Наведення прикладу з реального життя, наприклад, побудови графічних 
інтерфейсів для крос-платформених додатків, де абстракція вікна та її 
реалізація розділені. 
02:30 Код: базова структура 
Опис основних аспектів реалізації патерна у коді: створення інтерфейсу 
реалізації, абстрактного класу, що містить посилання на реалізацію, та 
делегування викликів методам реалізації. 
5 
02:50 Переваги патерна 
Перелік основних переваг: підвищення гнучкості системи, незалежність 
розвитку абстракції та реалізації, покращення підтримуваності та 
масштабованості коду. 
03:05 Потенційні недоліки 
Короткий розбір можливих недоліків, таких як збільшення кількості класів і 
ускладнення структури, що інколи може бути надмірним для простих систем. 
03:20 Висновки 
Підведення підсумків. Узагальнення сутності патерна «Міст», його значення 
для створення гнучких архітектур, та рекомендації щодо застосування у 
розробці сучасних ПЗ. 
6 
ДОДАТОК Б 
Слайди презентації на тему «Патерн Bridge». 
Рисунок Б.1 – Титульний слайд 
7 
Рисунок Б.2 – Що таке патерни проєктування 
Рисунок Б.3 – Загальна ідея патерна Bridge 
Рисунок Б.4 – Проблема, яку вирішує патерн 
8 
Рисунок Б.5 – Структура патерна Bridge 
Рисунок Б.6 – Приклад використання патерна 
9 
Рисунок Б.7 – Код: базова структура патерна 
Рисунок Б.8 – Переваги патерна 
10 
Рисунок Б.9 – Потенційні недоліки 
Рисунок Б.10 – Висновки 
11 
12 
 
 
Рисунок Б.11 – Джерела
